Slider render()
    children  map    copy     emitMouse -> this.onMouseDown
    onMouseDown
        onStart
            found handle    onSlideStart      sets this.active.
            else handleRailAndTrackClicks.(maybe set this.active too?)
                getUpdatedHandles(curr, updateKey, updateValue, reversed)  // updateKey is curr handle to move.
                    submitUpdate





Handle
    onMouseDown   props.onMouseDown, props.emitMouse(e, id)
                                        which goes to slider.onMouseDown
    .. onTouchStart onKeyDown

Rail
    onMouseDown   props.onMouseDown, props.emitMouse(e)

Track
    onMouseDown   props.onMouseDown, props.emitMouse(e)


add mouseMove to Rail, track?    


///////
Why need to remove eventlisteners in mouseUp as well as componentwillunmount?

onStart has isTouch. Maybe use same style for onMouseMove/onTouchMove.   -- turn into onMove.
why does cloneElement send handles to element types other than Handles ?


// for tooltip:
don't do removeEventListener 'mousemove' in onMouseUp. Maybe just an isMouseDown.

Maybe instead add mouseEnter, mouseMove, mouseLeave as props for tracks, rails, handles.
    (so won't respond to mouseMove over tooltip itself as it currently does)
    For former, do current conversion. For handles, just use val of that handle.
    Style flag for 'grabbed' mode.


// for grippy:
handleRailAndTrackClicks  to cause onStart(e.handleId)    
        works except for custom mode demo - max separation of 100. 
        shouldn't grip if handle didn't move there.
        maybe just run through handles & check for pos ~ mouse pos bew? but after state change?
        also, with key focus, grippy should move key focus too.


todo: mouseEnter, mouseLeave - pass to rails, tracks, handles then back up to slider so handleid passed
    for onMove.
    Why doesn't mousedown over handle immediately show up as red?
    Think onStart should setState for preTooltipInfo.
        what's correct way to set state ? func vs just a call?


x    more robust to just pass handleId for tooltipPreInfo - (plus grabbed flag)
x        do all extraction of vals in render, since they are there anyhow in mappedHandles.

    then can easily set handleId in onStart.

    replace tooltipPreInfo { val: number, handle: {id: string, grabbed: boolean}}

   talkiv.     

tooltip: no emit mouse.

